// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "t.me/mpstrkv"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/command": {
            "post": {
                "description": "Обработка всех slash-команд от Mattermost",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Команды"
                ],
                "summary": "Обработка команд Mattermost",
                "operationId": "process-command",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен верификации от Mattermost",
                        "name": "token",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID команды Mattermost",
                        "name": "team_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Домен команды Mattermost",
                        "name": "team_domain",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "ID канала, из которого отправлена команда",
                        "name": "channel_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Название канала",
                        "name": "channel_name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "ID пользователя, отправившего команду",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Имя пользователя, отправившего команду",
                        "name": "user_name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Slash-команда (например, /poll)",
                        "name": "command",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Текст, следующий за командой",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "URL для отправки отложенных ответов",
                        "name": "response_url",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "ID триггера для интерактивных диалогов",
                        "name": "trigger_id",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ на команду",
                        "schema": {
                            "$ref": "#/definitions/dto.MattermostResponse"
                        }
                    },
                    "400": {
                        "description": "Неправильный формат команды",
                        "schema": {
                            "$ref": "#/definitions/dto.MattermostResponse"
                        }
                    },
                    "401": {
                        "description": "Недействительный токен",
                        "schema": {
                            "$ref": "#/definitions/dto.MattermostResponse"
                        }
                    },
                    "403": {
                        "description": "Недостаточно прав для выполнения операции",
                        "schema": {
                            "$ref": "#/definitions/dto.MattermostResponse"
                        }
                    },
                    "404": {
                        "description": "Голосование не найдено",
                        "schema": {
                            "$ref": "#/definitions/dto.MattermostResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/dto.MattermostResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.MattermostResponse": {
            "type": "object",
            "properties": {
                "props": {},
                "response_type": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Mattermost Voting Bot API",
	Description:      "API для бота голосований в Mattermost, поддерживающее создание и управление голосованиями в чатах.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
